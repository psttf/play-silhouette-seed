slick.dbs.default {
  driver="slick.driver.PostgresDriver$"
  db {
    driver="org.postgresql.Driver"
    url=${?DATABASE_URL}
  }
}

hosting {
  domain = "127.0.0.1"
  domain = ${?HOSTING_DOMAIN}
  port = 9000
  port = ${?HOSTING_PORT}
  host = ${hosting.domain}":"${hosting.port}
}

play {

  application.loader=infrastructure.MainApplicationLoader

  http {
    secret {
      key="changeme"
      key=${?PLAY_HTTP_SECRET}
    }
    requestHandler = "play.api.http.DefaultHttpRequestHandler"
    forwarded.trustedProxies=["0.0.0.0/0", "::/0"]
  }

  i18n.langs=["en"]

  assets {
    path = "/public"
    urlPrefix = "/assets"
  }

  filters.hosts {
    allowed = [${?hosting.host}]
  }

  mailer {
    host = "localhost"
    port = 25
    mock = true
  }

  filters.headers {
    contentSecurityPolicy = "default-src 'self';"
    contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" img-src 'self' *.fbcdn.net *.twimg.com *.googleusercontent.com *.xingassets.com vk.com *.yimg.com secure.gravatar.com;"
    contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" style-src 'self' 'unsafe-inline' cdnjs.cloudflare.com maxcdn.bootstrapcdn.com cdn.jsdelivr.net fonts.googleapis.com;"
    contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" font-src 'self' fonts.gstatic.com fonts.googleapis.com cdnjs.cloudflare.com;"
    contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" script-src 'self' cdnjs.cloudflare.com;"
    contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" connect-src 'self' twitter.com *.xing.com;"
  }

}

akka {
  loglevel = "INFO"
  jvm-exit-on-fatal-error=off

  # Auth token cleaner
  quartz.schedules.AuthTokenCleaner {
    expression = "0 0 */1 * * ?"
    timezone = "UTC"
    description = "cleanup the auth tokens on every hour"
  }
}

include "silhouette.conf"
